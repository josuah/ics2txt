.Dd $Mdocdate: Mar 1 2020$
.Dt ICS2TXT 1
.Os
.
.
.Sh NAME
.
.Nm ics2txt
.Nd convert ics file to simpler tsv or txt formats
.
.
.Sh SYNOPSIS
.
.Nm ics2txt Ar <file.ics >file.txt
.Pp
.Nm ics2txt Ar <file.tsv >file.ics
.Nm ics2tsv Ar <file.ics >file.tsv
.Nm tsv2tcal Ar <file.tsv >file.txt
.Nm tcal2tsv Ar <file.txt >file.tsv
.Nm tsv2ics Ar <file.tsv >file.ics
.
.Sh DESCRIPTION
.
.Nm
is set of awk scripts to deal with iCal
.Pq Pa .ics
format to publish, display and convert *.ics files, though a simple
central TSV format.
.
.Pp
They all read from either stdin or the file passed as argument, and
write to stdout.
.
.Pp
.The
.Pa file.tsv
have one line per event, with the first line declaring fields order
and presence, among:
.
.Bl -tag -width xxxxx -offset 1n -compact
.It Dq beg
Begining of event (epoch)
.It Dq end
End of event (epoch)
.It Dq cat
Category
.It Dq loc
Location
.It Dq sum
Summary
.It Dq des
Description
.El
.
.
.Sh EXAMPLES
.
Convert a calendar from HTTP
.Pa .ics
to custom
.Pa .txt
sorted by start date:
.Dl curl "$url.ics" | ics2tsv | sort -n -k 1,1 | tsv2txt
.
.Pp
Convert a custom
.Pa .txt
format back to an
.Pa .ics
file and publish it:
.Dl tcal2tsv cal.txt | tsv2ics | ssh "www@$host" 'cat >/var/www/cal.ics'
.
.Pp
Split an
.ics
file according to the category, saved as
.Pa .tsv :
.Bd -literal
ics2tsv cal.txt | awk -F '\et' '
	NR == 1 { for (i = 1; i <= NF; i++) F[$i] = i; next }
	{ print >>($F["cat"]".tsv") }
\'
.Ed
.
.
.Sh SEE ALSO
.
.Xr cal 1 ,
.Xr calendar 1 ,
.Xr date 1 ,
.Xr sort 1
.
.
.Sh STANDARDS
.
.Rs
.%A Desruisseaux
.%D September 2009
.%T Internet Calendaring and Scheduling Core Object Specification (iCalendar)
.%R RFC 5545
.Re
.
.
.Sh AUTHORS
.
.An Josuah Demangeon Aq Mt me@josuah.net
