#!/usr/bin/awk -f

function isleap(year)
{
	return (year % 4 == 0) && (year % 100 != 0) || (year % 400 == 0)
}

function mdays(mon, year)
{
	return (mon == 2) ? (28 + isleap(year)) : (30 + (mon + (mon > 7)) % 2)
}

function timegm(tm,
	sec, mon, day)
{
	sec = tm["sec"] + tm["min"] * 60 + tm["hour"] * 3600

	day = tm["mday"] - 1

	for (mon = tm["mon"] - 1; mon > 0; mon--)
		day = day + mdays(mon, tm["year"])

	# constants: x * 365 + x / 400 - x / 100 + x / 4
	day = day + int(tm["year"] / 400) * 146097
	day = day + int(tm["year"] % 400 / 100) * 36524
	day = day + int(tm["year"] % 100 / 4) * 1461
	day = day + int(tm["year"] % 4 / 1) * 365

	return sec + (day - 719527) * 86400
}

function print_vevent(ev, fields,
	i)
{
	for (i = 1; i in fields; i++)
		printf("%s%s", (i > 1 ? "\t" : ""), ev[fields[i]])
	printf("\n")
}

function ical_parse_line(str, content, params,
	i, eq)
{
	if ((i = index(str, ":")) == 0)
		return -1
	content["value"] = substr(str, i + 1)
	str = substr(str, 1, i - 1)

	if ((i = index(str, ";")) == 0) {
		content["name"] = str
		return 0
	}
	content["name"] = substr(str, 1, i - 1)
	str = substr(str, i + 1)

	while ((i = index(str, ";")) > 0) {
		if ((eq = index(str, "=")) == 0)
			return -1
		param[substr(str, 1, eq - 1)] = substr(str, eq + 1, i - 1)
		str = substr(str, eq + 1)
	}
	if ((eq = index(str, "=")) == 0)
		return -1
	params[substr(str, 1, eq - 1)] = substr(str, eq + 1)
	return 0
}

function ical_set_tz(tzid)
{
	gsub("'", "", tzid)
	cmd = "TZ='" tzid "' exec date +%z" 
	cmd | getline tzid
	close(cmd)
	TZ = substr(tzid, 1, 1) substr(tzid, 2, 2)*3600 + substr(tzid, 4, 2)*60
}

function ical_to_epoch(content, param,
	tz, cmd)
{
	if (param["TZID"])
		ical_set_tz(param["TZID"])

	tm["year"] = substr(content["value"], 1, 4)
	tm["mon"] = substr(content["value"], 5, 2)
	tm["mday"] = substr(content["value"], 7, 2)
	tm["hour"] = substr(content["value"], 10, 2)
	tm["min"] = substr(content["value"], 12, 2)
	tm["sec"] = substr(content["value"], 14, 2)

	return timegm(tm) + TZ
}

BEGIN {
	split("DTSTART DTEND CATEGORIES LOCATION SUMMARY DESCRIPTION URL",
	  FIELDS, " ")
	DT["DTSTART"] = DT["DTEND"] = DT["DUE"] = 1

	# by default: "CATEGORIES" -> "cat", "LOCATION" -> "loc"...
	translate["DTSTART"] = "beg"
	translate["DTEND"] = "end"

	for (i = 1; i in FIELDS; i++) {
		if (!(s = translate[FIELDS[i]]))
			s = tolower(substr(FIELDS[i], 1, 3))
		printf("%s%s", (i > 1 ? "\t" : ""), s)
	}
	printf("\n")

	FS = "[:;]"
}

{
	gsub("\r", "")
	gsub("\t", "\\\\t")
}

sub("^ ", "") {
	content["value"] = content["value"] $0
	next
}

{
	delete content
	delete param

	if (ical_parse_line($0, content, params) < 0)
		next

	if (content["name"] == "TZID") {
		ical_set_tzid(content["value"])
	} else if (DT[content["name"]]) {
		vevent[content["name"]] = ical_to_epoch(content, params)
	} else {
		vevent[content["name"]] = content["value"]
	}
}

/^END:VEVENT/ {
	print_vevent(vevent, FIELDS)
	delete vevent
	next
}
